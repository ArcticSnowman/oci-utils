#!/usr/bin/env bash
set -euo pipefail

COMPARTMENT=""
CMPID=""
CLUSTER=""
CLUSTERID=""
NODEPOOL=""
NODEPOOLID=""
ACTIVE=false

function usage() {
  echo "Usage: $0 --compartment <compartment-name> --cluster <cluster-name> [--nodepool <nodepool-name>] [--debug]"
  echo ""
  echo "Options:"
  echo "  --compartment   Name of the compartment (required)"
  echo "  --cluster       Name of the cluster (required)"
  echo "  --nodepool      Name of the node pool (optional)"
  echo "  --debug         Enable debug mode (optional)"
  echo "  --active       Show only active nodes (optional)"
  echo "  --help|-h      Show this help message"
  exit 1
}

# Get the direcory of the current script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

. "$SCRIPT_DIR/oci-functions.sh"

while [[ $# -gt 0 ]]; do
  case $1 in
    --compartment)
      COMPARTMENT="$2"
      shift # past argument
      shift # past value
      ;;
    --cluster)
      CLUSTER="$2"
      shift # past argument
      shift # past value
      ;;
    --nodepool)
      NODEPOOL="$2"
      shift # past argument
      shift # past value
      ;;
    --active)
      ACTIVE=true
      shift # past argument
      ;;
    --debug)
      set -x
      shift # past argument
      ;;
    --help|-h)
      usage
      ;;
    *) 
      echo "Unknown option: $1"
      usage
      ;;      
  esac
done


CMPID=$(get_compartment_id "$COMPARTMENT")
if [ -z "$CMPID" ]; then
  echo "Compartment $COMPARTMENT not found"
  usage
fi

CLUSTERID=$(get_cluster_id "$CMPID" "$CLUSTER")
if [ -z "$CLUSTERID" ]; then
  echo "Cluster $CLUSTER not found in compartment $COMPARTMENT"
  usage
fi

OCICMD="oci ce node-pool list --compartment-id $CMPID --cluster-id $CLUSTERID"


if [ ! -z "$NODEPOOL" ]; then
  if [ -z "$CLUSTERID" ]; then
    echo "Cluster name must be specified when specifying a node pool name"
    usage
  fi
  NODEPOOLID=$(get_nodepool_id "$CMPID" "$CLUSTERID" "$NODEPOOL")
  if [ -z "$NODEPOOLID" ]; then
    echo "Node Pool $NODEPOOL not found in cluster $CLUSTER"
    usage
  fi
  
fi

function list_nodes() {
  local nodepool_id="$1"
  local nodepool_name="$2"
  local jqfilter='.[]'
  if $ACTIVE; then
    jqfilter+=' | select(."lifecycle-state"=="ACTIVE") '
  fi
  jqfilter+=' | [$nodepoolname, ."node-id", ."lifecycle-state", ."private-ip", .id] | @tsv'
  
  oci ce node-pool get --node-pool-id "$nodepool_id" --query 'data.nodes' --raw-output | jq --arg nodepoolname "$nodepool_name" -r "$jqfilter" | column -t
}

if [ ! -z "$NODEPOOLID" ]; then
  list_nodes "$NODEPOOLID" "$NODEPOOL"
  exit 0

else
  for nodepool in $($OCICMD | jq -r '.data[] | .name'); do
    NODEPOOLID=$(get_nodepool_id "$CMPID" "$CLUSTERID" "$nodepool")
    list_nodes "$NODEPOOLID" "$nodepool"
  done
fi
